//Uncomment this line on creating a translation file
//import { editorLocalization, defaultStrings } from "../editorLocalization";

export var enStrings = {
  //survey templates
  survey: {
    edit: "Edit",
    externalHelpLink: "Watch and learn how to create surveys",
    externalHelpLinkUrl:
      "https://www.youtube.com/channel/UCH2ru9okIcooNZfpIbyq4qQ?view_as=subscriber",
    dropQuestion: "Please drop a question here from the Toolbox.",
    addLogicItem: "Create a rule to customize the flow of the survey.",
    copy: "Copy",
    duplicate: "Duplicate",
    addToToolbox: "Add to toolbox",
    deletePanel: "Delete Panel",
    deleteQuestion: "Delete Question",
    convertTo: "Convert to",
    drag: "Drag element",
  },
  //questionTypes
  qt: {
    default: "Default",
    checkbox: "Checkbox",
    comment: "Comment",
    imagepicker: "Image picker",
    ranking: "Ranking",
    image: "Image",
    dropdown: "Dropdown",
    file: "File",
    html: "Html",
    matrix: "Matrix (single choice)",
    matrixdropdown: "Matrix (multiple choice)",
    matrixdynamic: "Matrix (dynamic rows)",
    multipletext: "Multiple Text",
    panel: "Panel",
    paneldynamic: "Panel (dynamic panels)",
    radiogroup: "Radiogroup",
    rating: "Rating",
    text: "Single Input",
    boolean: "Boolean",
    expression: "Expression (read-only)",
    signaturepad: "Signature pad",
    flowpanel: "Flow Panel",
  },
  //Strings in Editor
  ed: {
    defaultLocale: "Default ({0})",
    survey: "Survey",
    settings: "Survey Settings",
    settingsTooltip: "Open survey settings",
    //opjectPropertiesHeader: "Advanced",
    //showObjectProperties: "Show Object Properties",
    //hideObjectProperties: "Hide Object Properties",
    showPanel: "Show Panel",
    hidePanel: "Hide Panel",
    //editSurvey: "Edit Survey",
    addNewPage: "Add New Page",
    moveRight: "Scroll to the Right",
    moveLeft: "Scroll to the Left",
    deletePage: "Delete Page",
    editPage: "Edit Page",
    edit: "Edit",
    newPageName: "page",
    newQuestionName: "question",
    newPanelName: "panel",
    newTextItemName: "text",
    testSurvey: "Test Survey",
    testSurveyAgain: "Test Survey Again",
    testSurveyWidth: "Survey width: ",
    navigateToMsg: "You had to navigate to:",
    logic: "Survey Logic",
    embedSurvey: "Embed Survey",
    translation: "Translation",
    saveSurvey: "Save Survey",
    saveSurveyTooltip: "Save Survey",
    designer: "Survey Designer",
    jsonEditor: "JSON Editor",
    undo: "Undo",
    redo: "Redo",
    undoTooltip: "Undo last change",
    redoTooltip: "Redo the change",
    copy: "Copy",
    cut: "Cut",
    paste: "Paste",
    copyTooltip: "Copy selection to clipboard",
    cutTooltip: "Cut selection to clipboard",
    pasteTooltip: "Paste from clipboard",
    options: "Options",
    generateValidJSON: "Generate Valid JSON",
    generateReadableJSON: "Generate Readable JSON",
    toolbox: "Toolbox",
    "property-grid": "Properties",
    toolboxGeneralCategory: "General",
    //delSelObject: "Delete selected object",
    //editSelObject: "Edit selected object",
    correctJSON: "Please correct JSON.",
    surveyResults: "Survey Result: ",
    surveyResultsTable: "As Table",
    surveyResultsJson: "As JSON",
    resultsTitle: "Question Title",
    resultsName: "Question Name",
    resultsValue: "Answer Value",
    resultsDisplayValue: "Display Value",
    modified: "Modified",
    saving: "Saving",
    saved: "Saved",
    propertyEditorError: "Error:",
    saveError: "Error! Editor content is not saved.",
    translationAddLanguage: "Select language to translate",
    translationShowAllStrings: "Show all strings",
    translationShowAllPages: "Show all pages",
    translationNoStrings: "No strings to translate. Please, change the filter.",
    translationExportToSCVButton: "Export to CSV",
    translationImportFromSCVButton: "Import from CSV",
    translationMergeLocaleWithDefault: "Merge {0} with default locale",
    bold: "Bold",
    italic: "Italic",
    underline: "Underline",
    fpAddQuestion: "Add question...",
    selectPage: "Select page...",
    chooseElement: "Choose element...",
    //completedHtmlOnConditionItemText: "Show if:",
    lg: {
      addNewItem: "", //By default the value is taken from pe.addNew 'Add New', you can set it to 'Add New Rule' for example.
      //Logic tab strings
      page_visibilityName: "Page visibility",
      page_enableName: "Page enable/disable",
      panel_visibilityName: "Panel visibility",
      panel_enableName: "Panel enable/disable",
      question_visibilityName: "Question visibility",
      question_enableName: "Question enable/disable",
      question_requireName: "Question optional required",
      trigger_completeName: "Complete survey",
      trigger_setvalueName: "Set question value",
      trigger_copyvalueName: "Copy question value",
      trigger_skipName: "Skip to question",
      trigger_runExpressionName: "Run custom expression",
      completedHtmlOnConditionName: "Custom 'Thank you page' text",

      page_visibilityDescription:
        "Make the page visible when the logic expression returns true. Otherwise keep it invisible.",
      panel_visibilityDescription:
        "Make the panel visible when the logic expression returns true. Otherwise keep it invisible.",
      panel_enableDescription:
        "Make the panel, and all elements inside it, enable when the logic expression returns true. Otherwise keep them disabled.",
      question_visibilityDescription:
        "Make the question visible when the logic expression returns true. Otherwise keep it invisible.",
      question_enableDescription:
        "Make the question enable when the logic expression returns true. Otherwise keep it disabled.",
      question_requireDescription:
        "Question becomes required when the logic expression returns true.",
      trigger_completeDescription:
        "When the logic expression returns true then the survey becomes completed and an end-user see the 'Thank you page'.",
      trigger_setvalueDescription:
        "When question values, that are used in the logic expression, are changed and the logic expression returns true, then the value is set to the selected question.",
      trigger_copyvalueDescription:
        "When question values, that are used in the logic expression, are changed and the logic expression returns true, then the value of one selected question is copied to another selected question.",
      trigger_skipDescription:
        "When the logic expression returns true then the survey skip to / focus the selected question.",
      trigger_runExpressionDescription:
        "When the logic expression returns true, then the custom expression is performed. You may optionally set this expression result into the selected question",
      completedHtmlOnConditionDescription:
        "If the logic expression returns true, then the default text for the 'Thank you page' is changed to the given one.",

      itemExpressionText: "When expression: '{0}' returns true:", //{0} - the expression
      page_visibilityText: "Make page {0} visible", //{0} page name
      panel_visibilityText: "Make panel {0} visible", //{0} panel name
      panel_enableText: "Make panel {0} enable", //{0} panel name
      question_visibilityText: "Make question {0} visible", //{0} question name
      question_enableText: "Make question {0} enable", //{0} question name
      question_requireText: "Make question {0} required", //{0} question name
      trigger_completeText: "Survey becomes completed",
      trigger_setvalueText: "Set into question: {0} value {1}", //{0} question name, {1} setValue
      trigger_copyvalueText: "Copy into question: {0} value from question {1}", //{0} and {1} question names
      trigger_skipText: "Survey skip to the question {0}", //{0} question name
      trigger_runExpressionText1: "Run expression: '{0}'", //{0} the expression
      trigger_runExpressionText2: " and set its result into question: {0}", //{0} question name
      completedHtmlOnConditionText:
        "Show custom text for the 'Thank you page'.",

      conditions: "Condition(s)",
      actions: "Action(s)",
      expressionEditorTitle: "Define condition(s)",
      actionsEditorTitle: "Define action(s)",

      deleteAction: "Delete action",
      addNewAction: "Add new action",
      selectedActionCaption: "Select an action to add...",

      expressionInvalid:
        "The logic expression is empty or invalid. Please correct it.",
      noActionError: "Please, add at least one action.",
      actionInvalid: "Please, fix problems in your action(s).",
      expressionSetup: "",
      actionsSetup: "",
    },
  },
  //Property names in table headers
  // pel: {
  //   isRequired: "Required?"
  // },
  //Property Editors
  pe: {
    apply: "Apply",
    ok: "OK",
    save: "Save",
    saveTooltip: "Save",
    cancel: "Cancel",
    reset: "Reset",
    refresh: "Refresh",
    // close: "Close",
    delete: "Delete",
    add: "Add",
    addNew: "Add New",
    addItem: "Click to add an item...",
    addOther: "Other",
    addSelectAll: "Select All",
    addNone: "None",
    removeAll: "Remove All",
    edit: "Edit",
    view: "View",
    back: "Return without saving",
    backTooltip: "Return without saving",
    saveAndBack: "Save and return",
    saveAndBackTooltip: "Save and return",
    // itemValueEdit: "Visible If",
    editChoices: "Edit Choices",
    showChoices: "Show Choices",
    move: "Move",
    empty: "<empty>",
    // notEmpty: "<edit value>",
    fastEntry: "Fast Entry",
    formEntry: "Form Entry",
    testService: "Test the service",
    itemSelectorEmpty: "Please select the element",
    conditionActionEmpty: "Please select the action",
    conditionSelectQuestion: "Select question...",
    conditionSelectPage: "Select page...",
    conditionSelectPanel: "Select panel...",
    conditionValueQuestionTitle: "Please enter/select the value",
    // conditionHelp:
    //   "Please enter a boolean expression. It should return true to keep the question/page visible. For example: {question1} = 'value1' or ({question2} * {question4}  > 20 and {question3} < 5)",
    expressionHelp:
      "Use curly brackets to access answers: {question1} + {question2}. Expressions also support functions: iif(), today(), age(), min(), max(), count(), avg(), and others",
    aceEditorHelp: "Press ctrl+space to get expression completion hint",
    aceEditorRowTitle: "Current row",
    aceEditorPanelTitle: "Current panel",
    showMore: "For more details please check the documentation",
    // conditionShowMoreUrl:
    //   "https://surveyjs.io/Documentation/LibraryParameter?id=Question&parameter=visibleIf",
    assistantTitle: "Available questions:",
    cellsEmptyRowsColumns: "There is should be at least one column or row",
    showPreviewBeforeComplete: "Preview answers before submitting the survey",

    propertyIsEmpty: "Please enter a value",
    propertyIsNoUnique: "Please enter a unique value",
    propertyNameIsNotUnique: "Please enter a unique name",
    listIsEmpty: "Add a new item",
    expressionIsEmpty: "Expression is empty",
    value: "Value",
    text: "Text",
    rowid: "Row ID",
    imageLink: "Image or video URL",
    columnEdit: "Edit column: {0}",
    itemEdit: "Edit item: {0}",
    itemView: "View item: {0}",

    url: "Service URL",
    path: "Path to data within the service",
    valueName: "Value name",
    titleName: "Title name",
    allowEmptyResponse: "Allow empty response",
    titlePlaceholder: "Input title here",
    surveyTitlePlaceholder: "Input survey title here",
    pageTitlePlaceholder: "Input page title here",
    descriptionPlaceholder: "Enter a description",
    surveyDescriptionPlaceholder: "Enter a survey description",
    pageDescriptionPlaceholder: "Enter a page description",

    hasOther: "Allow the Other option",
    otherText: "Other option text",
    hasNone: "Allow the None option",
    noneText: "None option text",
    hasSelectAll: "Allow the Select All option",
    selectAllText: "Select All option text",
    choicesMin: "Minimum value for auto-generated items",
    choicesMax: "Maximum value for auto-generated items",
    choicesStep: "Step for auto-generated items",
    name: "Name",
    title: "Title",
    cellType: "Cell type",
    colCount: "Column count",
    choicesOrder: "Choices sort order",
    visible: "Visible",
    isRequired: "Required",
    isAllRowRequired: "Require answer for all rows",
    requiredErrorText: "\"Required\" error message",
    startWithNewLine: "Display the question on a new line",
    rows: "Row count",
    cols: "Column count",
    placeHolder: "Input area placeholder",
    showPreview: "Show preview area",
    storeDataAsText: "Store file content in JSON result as text",
    maxSize: "Maximum file size (in bytes)",
    imageHeight: "Image height",
    imageWidth: "Image width",
    rowCount: "Row count",
    columnLayout: "Columns layout",
    addRowLocation: "Add Row button location",
    addRowText: "Add Row button text",
    removeRowText: "Remove Row button text",
    rateMin: "Minimum rate value",
    rateMax: "Maximum rate value",
    rateStep: "Rate step",
    minRateDescription: "Minimum rate value description",
    maxRateDescription: "Maximum rate value description",
    inputType: "Input type",
    optionsCaption: "Option placeholder",
    showOptionsCaption: "Show option placeholder",
    defaultValue: "Default value",
    cellsDefaultRow: "Default texts",

    surveyEditorTitle: "Edit survey settings",
    qEditorTitle: "Edit: {0}",

    maxLength: "Maximum length (in characters)",

    buildExpression: "Build",
    editExpression: "Edit",
    and: "And",
    or: "Or",
    remove: "Remove",
    addCondition: "Add condition",

    //survey
    showTitle: "Show the title",
    expandCollapseTitle: "Expand/collapse title",
    locale: "Default language",
    simulator: "Choose device",
    landscapeOrientation: "Landscape",
    mode: "Mode (edit/read only)",
    clearInvisibleValues: "Clear invisible values",
    cookieName: "Cookie name",
    sendResultOnPageNext: "Send survey results on page next",
    storeOthersAsComment: "Store the Others value in a separate field",
    showPageTitles: "Show page titles",
    showPageNumbers: "Show page numbers",
    pagePrevText: "Previous Page button text",
    pageNextText: "Next Page button text",
    completeText: "Complete Survey button text",
    previewText: "Preview Answers button text",
    editText: "Edit Answer button text",
    startSurveyText: "Start Survey button text",
    showNavigationButtons: "Navigation buttons location",
    showPrevButton: "Show the Previous Page button",
    firstPageIsStarted: "First page is a start page",
    showCompletedPage: "Show the Survey Complete page",
    goNextPageAutomatic: "Proceed to the next page automatically",
    showProgressBar: "Progress bar location",
    questionTitleLocation: "Question title location",
    requiredText: "Required symbol(s)",
    questionStartIndex: "Start index (number or letter)",
    showQuestionNumbers: "Question numbering",
    questionTitleTemplate:
      "Question title template, default is: '{no}. {require} {title}'",
    questionErrorLocation: "Error message location",
    focusFirstQuestionAutomatic: "Focus first question on a new page",
    questionsOrder: "Elements order on the page",
    maxTimeToFinish: "Time limit to finish the survey (in seconds)",
    maxTimeToFinishPage: "Time limit to finish one page (in seconds)",
    showTimerPanel: "Timer location",
    showTimerPanelMode: "Timer mode",
    renderMode: "Render mode",
    allowAddPanel: "Users can add panels",
    allowRemovePanel: "Users can delete panels",
    panelAddText: "Add Panel button text",
    panelRemoveText: "Remove Panel button text",
    isSinglePage: "Show all elements on one page",
    html: "HTML markup",
    expression: "Expression",

    minValue: "Minimum value",
    maxValue: "Maximum value",
    minLength: "Minimum length (in characters)",
    allowDigits: "Allow digits",
    minCount: "Minimum count",
    maxCount: "Maximum count",
    regex: "Regular expression",

    totalText: "Total row text",
    totalType: "Total type",
    totalExpression: "Total expression",
    totalDisplayStyle: "Total value display style",
    totalCurrency: "Currency",
    totalFormat: "Formatted string",
    logo: "Logo (URL or base64-encoded string)",
    questionsOnPageMode: "Survey structure",
    maxTextLength: "Maximum answer length (in characters)",
    maxOthersLength: "Maximum comment length (in characters)",
    autoGrowComment: "Auto-expand comment area if necessary",
    textUpdateMode: "Update text question value",
    focusOnFirstError: "Set focus on the first invalid answer",
    checkErrorsMode: "Run validation",
    navigateToUrl: "Navigate to URL",
    navigateToUrlOnCondition: "Dynamic URL",
    completedBeforeHtml: "Markup to show if the user already filled out this survey",
    completedHtml: "Survey Complete page markup",
    completedHtmlOnCondition: "Dynamic Survey Complete page markup",
    loadingHtml: "Markup to show while survey model is loading",
    commentText: "Comment area text",
    autoComplete: "Autocomplete type",
    labelTrue: "\"True\" label",
    labelFalse: "\"False\" label",
    allowClear: "Show the Clear button",
    displayStyle: "Value display style",
    format: "Formatted string",
    maximumFractionDigits: "Maximum fractional digits",
    minimumFractionDigits: "Minimum fractional digits",
    useGrouping: "Display grouping separators",
    allowMultiple: "Allow multiple files",
    allowImagesPreview: "Preview images",
    acceptedTypes: "Accepted file types",
    waitForUpload: "Wait for the upload to complete",
    needConfirmRemoveFile: "Confirm file deletion",
    detailPanelMode: "Detail panel display mode",
    minRowCount: "Minimum row count",
    maxRowCount: "Maximum row count",
    confirmDelete: "Cofirm row deletion",
    panelCount: "Initial panel count",
    minPanelCount: "Minimum panel count",
    maxPanelCount: "Maximum panel count",
    panelsState: "Panel expand state",
    templateDescription: "Description template",
    panelPrevText: "Previous Panel button tooltip",
    panelNextText: "Next Panel button tooltip",
    showRangeInProgress: "Show progress bar",
    templateTitleLocation: "Question title location",
    panelRemoveButtonLocation: "Remove Panel button location",
    hideIfRowsEmpty: "Hide the question if there are no rows",
    hideColumnsIfEmpty: "Hide columns if there are no rows",
    rateValues: "Custom rate values",
    hideIfChoicesEmpty: "Hide the question if it contains no choices",
    hideNumber: "Hide question number",
    minWidth: "Minimum width (in CSS-accepted values)",
    maxWidth: "Maximum width (in CSS-accepted values)",
    width: "Width (in CSS-accepted values)",
    showHeader: "Show column headers",
    horizontalScroll: "Show horizontal scrollbar",
    columnMinWidth: "Minimum column width (in CSS-accepted values)",
    rowTitleWidth: "Row header width (in CSS-accepted values)",
    valueTrue: "\"True\" value",
    valueFalse: "\"False\" value",
    minErrorText: "\"Value is below minimum\" error message",
    maxErrorText: "\"Value exceeds maximum\" error message",
    otherErrorText: "\"Empty comment\" error message",
    keyDuplicationError: "\"Non-unique key value\" error message",
    choicesFromQuestion: "Copy choices from the following question:",
    choicesFromQuestionMode: "Which choices to copy?",
    maxSelectedChoices: "Maximum selected choices",
    showClearButton: "Show the Clear button",
    showNumber: "Show panel number",
    logoWidth: "Logo width (in CSS-accepted values)",
    logoHeight: "Logo height (in CSS-accepted values)",
    readOnly: "Read-only",
    enableIf: "Editable if",
    emptyRowsText: "\"No rows\" message",
    size: "Input size (in characters)",
    separateSpecialChoices: "Separate special choices (None, Other, Select All)",
    allowAddRows: "Users can add rows",
    allowRemoveRows: "Users can delete rows",
    allowRowsDragAndDrop: "Users can reorder rows",

    // Header  adorner
    logoPosition: "Logo position",
    addLogo: "Add logo...",
    changeLogo: "Change logo...",
    logoPositions: {
      none: "Remove logo",
      left: "Left",
      right: "Right",
      top: "On the top",
      bottom: "In the bottom",
    },

    tabs: {
      general: "General",
      fileOptions: "Options",
      html: "Html Editor",
      columns: "Columns",
      rows: "Rows",
      choices: "Choices",
      items: "Items",
      visibleIf: "Visible If",
      enableIf: "Editable If",
      requiredIf: "Required If",
      rateValues: "Rate Values",
      choicesByUrl: "Choices from a RESTful Service",
      matrixChoices: "Default Choices",
      multipleTextItems: "Text Inputs",
      numbering: "Numbering",
      validators: "Validators",
      navigation: "Navigation",
      question: "Question",
      pages: "Pages",
      timer: "Timer/Quiz",
      calculatedValues: "Calculated Values",
      triggers: "Triggers",
      templateTitle: "Title template",
      totals: "Totals",
      logic: "Logic",
      layout: "Layout",
      data: "Data",
      validation: "Validation",
      cells: "Cell Texts",
      showOnCompleted: "Survey Complete",
      logo: "Logo in Survey Title",
      slider: "Slider",
      others: "Others",
    },
    editProperty: "Edit property '{0}'",
    items: "[ Items: {0} ]",

    enterNewValue: "Please, enter the value.",
    noquestions: "There is no any question in the survey.",
    createtrigger: "Please create a trigger",
    titleKeyboardAdornerTip: "Press enter button to edit",
    keyboardAdornerTip: "Press enter button to edit item, press delete button to delete item, press alt plus arrow up or arrow down to move item",
    keyboardMoveItemsTip: "Press alt plus arrow up or arrow down to move item",
    triggerOn: "On ",
    triggerMakePagesVisible: "Make pages visible:",
    triggerMakeQuestionsVisible: "Make elements visible:",
    triggerCompleteText: "Complete the survey if succeed.",
    triggerNotSet: "The trigger is not set",
    triggerRunIf: "Run if",
    triggerSetToName: "Change value of: ",
    triggerFromName: "Copy value from: ",
    triggerRunExpression: "Run this Expression:",
    triggerSetValue: "to: ",
    triggerGotoName: "Go to the question:",
    triggerIsVariable: "Do not put the variable into the survey result.",
    triggerRunExpressionEmpty: "Please enter a valid expression",

    noFile: "No file choosen",
  },
  //Property values
  pv: {
    true: "true",
    false: "false",
    inherit: "Inherit",
    show: "Show",
    hide: "Hide",
    default: "Default",
    initial: "Initial",
    random: "Random",
    collapsed: "All collapsed",
    expanded: "All expanded",
    none: "None",
    asc: "Ascending",
    desc: "Descending",
    indeterminate: "Indeterminate",
    decimal: "decimal",
    currency: "currency",
    percent: "percent",
    firstExpanded: "First panel expanded",
    off: "Hide question numbers",
    onPanel: "Start on each panel",
    onSurvey: "onSurvey",
    list: "List",
    progressTop: "progressTop",
    progressBottom: "progressBottom",
    progressTopBottom: "progressTopBottom",
    horizontal: "Horizontal",
    vertical: "Vertical",
    top: "Top",
    bottom: "Bottom",
    topBottom: "Top and bottom",
    both: "Both",
    left: "Left",
    color: "color",
    date: "date",
    datetime: "datetime",
    "datetime-local": "datetime-local",
    email: "email",
    month: "month",
    number: "number",
    password: "password",
    range: "range",
    tel: "tel",
    text: "text",
    time: "time",
    url: "url",
    week: "week",
    hidden: "Hidden",
    on: "Start on each page",
    onPage: "Continue from the previous page",
    edit: "Edit",
    display: "Display",
    onComplete: "When the survey is completed",
    onHidden: "When the question becomes hidden",
    all: "All",
    page: "Page",
    survey: "Survey",
    onNextPage: "When switching to the next page",
    onValueChanged: "After an answer is changed",
    onValueChanging: "Before an answer is changed",
    standard: "Original structure",
    singlePage: "All questions on a single page",
    questionPerPage: "Each question on an individual page",
    noPreview: "No preview",
    showAllQuestions: "Show all questions",
    showAnsweredQuestions: "Show answered questions only",
    pages: "Completed pages",
    questions: "Answered questions",
    requiredQuestions: "Answered required questions",
    correctQuestions: "Valid answers",
    buttons: "Completed pages (button UI)",
    underInput: "Under the input",
    underTitle: "Under the title",
    onBlur: "On blur",
    onTyping: "While typing",
    underRow: "Under the row",
    underRowSingle: "Under the row, only one panel is visible"
  },
  //Operators
  op: {
    empty: "is empty",
    notempty: "is not empty",
    equal: "equals",
    notequal: "not equals",
    contains: "contains",
    notcontains: "not contains",
    anyof: "any of",
    allof: "all of",
    greater: "greater",
    less: "less",
    greaterorequal: "greater or equals",
    lessorequal: "less or equals",
    and: "and",
    or: "or",
  },
  //Embed window
  ew: {
    angular: "Use Angular version",
    jquery: "Use jQuery version",
    knockout: "Use Knockout version",
    react: "Use React version",
    vue: "Use Vue version",
    bootstrap: "For bootstrap framework",
    modern: "Modern theme",
    default: "Default theme",
    orange: "Orange theme",
    darkblue: "Darkblue theme",
    darkrose: "Darkrose theme",
    stone: "Stone theme",
    winter: "Winter theme",
    winterstone: "Winter-Stone theme",
    showOnPage: "Show survey on a page",
    showInWindow: "Show survey in a window",
    loadFromServer: "Load Survey JSON from server",
    titleScript: "Scripts and styles",
    titleHtml: "HTML",
    titleJavaScript: "JavaScript",
  },
  //Test Survey
  ts: {
    selectPage: "Select the page to test it:",
    showInvisibleElements: "Show invisible elements",
  },
  validators: {
    answercountvalidator: "Answer count",
    emailvalidator: "Email",
    expressionvalidator: "Expression",
    numericvalidator: "Number",
    regexvalidator: "Regex",
    textvalidator: "Text",
  },
  triggers: {
    completetrigger: "Complete survey",
    setvaluetrigger: "Set answer",
    copyvaluetrigger: "Copy answer",
    skiptrigger: "Skip to question",
    runexpressiontrigger: "Run expression",
    visibletrigger: "change visibility (deprecated)",
  },
  pehelp: {
    cookieName: "Cookies prevent users from filling out the same survey twice.",
    format: "Use {0} as a placeholder for the actual value.",
    totalText: "Visible only when at least one column has Total type or Total expression.",
  },
  //Properties
  p: {
    title: {
      name: "title",
      title: "Leave it empty, if it is the same as 'Name'",
    },
    navigationButtonsVisibility: "navigationButtonsVisibility",
    visibleIf: "visibleIf",
    description: "description",
    state: "state",
    requiredIf: "requiredIf",
    indent: "indent",
    innerIndent: "innerIndent",
    page: "page",
    correctAnswer: "correctAnswer",
    validators: "validators",
    titleLocation: "titleLocation",
    hasComment: "hasComment",
    choices: "choices",
    choicesByUrl: "choicesByUrl",
    label: "label",
    currency: "currency",
    columns: "columns",
    cells: "cells",
    columnsLayout: "columnsLayout",
    columnColCount: "columnColCount",
    keyName: "keyName",
    confirmDeleteText: "confirmDeleteText",
    itemSize: "itemSize",
    templateTitle: "templateTitle",
    triggers: "triggers",
    defaultPanelValue: "defaultPanelValue",
    defaultRowValue: "defaultRowValue",
    multiSelect: "Multi select",
    showLabel: "Show label",
    logoFit: "logoFit",
    pages: "pages",
    calculatedValues: "calculatedValues",
    questionDescriptionLocation: "questionDescriptionLocation",
    progressBarType: "progressBarType",
    questionTitlePattern: "questionTitlePattern",
    widthMode: "widthMode",
    navigationTitle: "navigationTitle",
    navigationDescription: "navigationDescription",
    useDisplayValuesInTitle: "useDisplayValuesInTitle",
    descriptionLocation: "descriptionLocation",
    defaultValueExpression: "defaultValueExpression",
    bindings: "bindings",
    columnsVisibleIf: "columnsVisibleIf",
    rowsVisibleIf: "rowsVisibleIf",
    defaultValueFromLastRow: "defaultValueFromLastRow",
    detailPanelShowOnAdding: "detailPanelShowOnAdding",
    rowsOrder: "rowsOrder",
    choicesVisibleIf: "choicesVisibleIf",
    choicesEnableIf: "choicesEnableIf",
    otherPlaceHolder: "otherPlaceHolder",
    contentMode: "contentMode",
    imageFit: "imageFit",
    min: "min",
    max: "max",
    minValueExpression: "minValueExpression",
    maxValueExpression: "maxValueExpression",
    step: "step",
    dataList: "dataList",
    autoGrow: "autoGrow",
    multiLine: "multiLine",
    height: "height",
    penColor: "penColor",
    backgroundColor: "backgroundColor",
    dataFormat: "dataFormat",
    defaultValueFromLastPanel: "defaultValueFromLastPanel",
    showCaption: "showCaption",
    iconName: "iconName",
    iconSize: "iconSize"
  },
};
//Uncomment this line on creating a translation file. You should replace "en" and enStrings with your locale ("fr", "de" and so on) and your variable.
//editorLocalization.locales["en"] = enStrings;
